import telebot
from telebot import types
from check import check_int

bot = telebot.TeleBot('YOUR TOKEN')

menu = {"–ú–∞—Ä–≥–∞—Ä–∏—Ç—Ç–∞": 299, "4 —Å—ã—Ä–∞": 299, "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏": 399, "–ü–∏—Ü–∞ —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏": 399, "–ü–ò–¶–¶–ê –° –°–û–°–ò–°–ö–û–ô –ö–ê–ú–û–ó–ò–ù–ê": 1000, "–ü–∏—Ü—Ü–∞ –æ—Ç –º–æ–µ–π 911 –∂–µ–Ω—ã(9 –º–µ—Å—è—Ü–µ–≤)": 1234}
basket = {}
number_of_order = 1


@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! —è –±–æ—Ç - –ø–∏—Ü—Ü–µ—Ä–∏—è, –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –≤–∞—à –∑–∞–∫–∞–∑! –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ —è –º–æ–≥—É –Ω–∞–ø–∏—à–∏ /help')


@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, '–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n/order - —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑\n/pay - –æ–ø–ª–∞—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É\n/basket - –ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –µ—Å—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω–µ\n/check - –≤—ã–ø–∏—Å–∞—Ç—å —á–µ–∫\n/history - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤\n')


#–æ–ø–ª–∞—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã
def get_change(message):
    #–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ check.py, –µ—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Ç–æ –æ–ø–ª–∞—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    if check_int(message=message):
        global basket
        global number_of_order
        if int(message.text) < sum_basket:
            bot.reply_to(message, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ü´§')
        else:
            #—É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –∫–æ—Ä–∑–∏–Ω—ã
            bot.send_message(message.chat.id, f'–ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–∞ –Ω–∞ —Å—É–º–º—É {sum_basket} —Ä—É–±–ª–µ–π, –≤–∞—à–∞ —Å–¥–∞—á–∞: {int(message.text) - sum_basket}—Ä—É–±. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—Éüòä\n–ù–∞–∂–º–∏—Ç–µ /help —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ')
            #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∑–∞–∫–∞–∑–æ–≤
            with open('order_history.txt', 'a') as file:
                for i in basket:
                    file.write(f'–æ–ø–ª–∞—á–µ–Ω –∑–∞–∫–∞–∑ ‚Ññ{number_of_order}, –∑–∞–∫–∞–∑–∞–Ω —Ç–æ–≤–∞—Ä: {i} –Ω–∞ —Å—É–º–º—É {basket[i]}\n')
                    number_of_order += 1
            #–æ—Ç—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            basket = {}
    #–µ—Å–ª–∏ —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç–æ –ø–∏—à–µ–º, —á—Ç–æ —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
    else:
        bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò•')


@bot.message_handler(commands=['pay'])
def pay(message):
    if basket != {}:
        #—Å—á–∏—Ç–∞–µ–º —Å—É–º–º—É –±–∞–∫—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –¥–æ–ª–∂–Ω—ã
        global sum_basket
        sum_basket = [basket[i] for i in basket]
        sum_basket = int(sum(sum_basket))
        #—Ñ—Ä–∏ —Ö–∞–Ω–≥—Ä–µ–¥ –±–∞–∫—Å
        bot.send_message(message.chat.id, f'ü´∞–ö –æ–ø–ª–∞—Ç–µ - {sum_basket} —Ä—É–±–ª–µ–πü´∞')

        #—Å–æ–∑–¥–∞–µ–º –∏—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
        markup1 = types.InlineKeyboardMarkup()

        but1 = types.InlineKeyboardButton(text='–ö–∞—Ä—Ç–æ–πüí≥', callback_data='optioncard')
        but2 = types.InlineKeyboardButton(text='–ù–∞–ª–∏—á–Ω—ã–º–∏üíµ', callback_data='optioncash')

        markup1.add(but1, but2)

        #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –µ–≥–æ –∫ –º–µ–Ω—é
        bot.send_message(message.chat.id, '–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏?üè¶', reply_markup=markup1)
    else:
        bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞üòì')
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.callback_query_handler(func=lambda call: call.data.startswith('option'))
def check_callback(call):
    #–¥–µ–ª–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
    global number_of_order
    global sum_basket
    if call.data == 'optioncard':
        bot.send_message(call.message.chat.id, f'–ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–∞ –Ω–∞ —Å—É–º–º—É {sum_basket}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!üòä\n–ù–∞–∂–º–∏—Ç–µ /help —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ')
        #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–∫–∞–∑ –≤ —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∑–∞–∫–∞–∑–æ–≤
        with open('order_history.txt', 'a') as file:
            for i in basket:
                file.write(f'–æ–ø–ª–∞—á–µ–Ω –∑–∞–∫–∞–∑ ‚Ññ{number_of_order}, –∑–∞–∫–∞–∑–∞–Ω —Ç–æ–≤–∞—Ä: {i} –Ω–∞ —Å—É–º–º—É {basket[i]}\n')
                number_of_order += 1
    else:
        #–∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å –∏ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–∏—á–Ω—ã–º–∏
        question = bot.send_message(call.message.chat.id, '–°–∫–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –≤—ã –¥–∞–µ—Ç–µ?üí∏')
        bot.register_next_step_handler(question, get_change)


#–≤—ã–ø–∏—Å—ã–≤–∞–µ–º —á–µ–∫
@bot.message_handler(commands=['check'])
def check(message):
    check = []
    j = 1
    sum = 0
    check_str = ''
    for i in basket:
        check.append(list(f'–¢–æ–≤–∞—Ä ‚Ññ{j}: {i}, —Ü–µ–Ω–∞ - {basket[i]}—Ä—É–±.'))
        j+=1
        sum += basket[i]
    check.append(list(f'–ò—Ç–æ–≥–æ: {sum}—Ä—É–±.'))
    for i in range(len(check)):
        for j in range(len(check[i])):
            check_str += check[i][j]
        check_str += '\n'
    bot.send_message(message.chat.id, check_str)

#–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
@bot.message_handler(commands=['basket'])
def demonstrate_basket(message):
    if basket != {}:
        basket_text = ''
        for i in basket:
            basket_text += f'{i} - {basket[i]}\n'
        bot.send_message(message.chat.id, basket_text)
    else:
        bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')

#–¥–µ–ª–∞–µ–º –∑–∞–∫–∞–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –º–µ–Ω—é
@bot.message_handler(commands=['order'])
def order(message):
    #—Å–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
    markup = types.InlineKeyboardMarkup()

    but = types.InlineKeyboardButton(text='–ú–∞—Ä–≥–∞—Ä–∏—Ç—Ç–∞', callback_data="pizza–ú–∞—Ä–≥–∞—Ä–∏—Ç—Ç–∞")
    but1 = types.InlineKeyboardButton(text='4 –°—ã—Ä–∞', callback_data="pizza4 —Å—ã—Ä–∞")
    but2 = types.InlineKeyboardButton(text='–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', callback_data="pizza–ü–µ–ø–ø–µ—Ä–æ–Ω–∏")
    but3 = types.InlineKeyboardButton(text='–ü–∏—Ü–∞ —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏', callback_data="pizza–ü–∏—Ü–∞ —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏")
    but4 = types.InlineKeyboardButton(text='–ü–ò–¶–¶–ê –° –°–û–°–ò–°–ö–û–ô –ö–ê–ú–û–ó–ò–ù–ê', callback_data='pizza–ü–ò–¶–¶–ê –° –°–û–°–ò–°–ö–û–ô –ö–ê–ú–û–ó–ò–ù–ê')
    but5 = types.InlineKeyboardButton(text='–ü–∏—Ü—Ü–∞ –æ—Ç –º–æ–µ–π 911 –∂–µ–Ω—ã(–µ–π -9 –º–µ—Å—è—Ü–µ–≤)', callback_data='pizza–ü–∏—Ü—Ü–∞ –æ—Ç –º–æ–µ–π 911 –∂–µ–Ω—ã(9 –º–µ—Å—è—Ü–µ–≤)')
    markup.add(but, but1, but2, but3, but4, but5)
    #–∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –µ–≥–æ –∫ –Ω–∞—à–µ–º—É –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?üçï', reply_markup=markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –º–µ–Ω—é
@bot.callback_query_handler(func=lambda call: call.data.startswith('pizza'))
def handle_callback(call):
    #—É–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–æ pizza –∏–∑ –≤—ã–±–æ—Ä–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
    if call.data.replace('pizza', '') in menu:
        basket[call.data.replace('pizza', '')] = menu[call.data.replace('pizza', '')]
        bot.send_message(call.message.chat.id, f'–ü–∏—Ü—Ü–∞ {call.data.replace("pizza", "")} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É!üòÅ\n–î–ª—è –ø–æ–º–æ—â–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help')

    #–µ—Å–ª–∏ —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫ —Ç–æ –ø–∏—à–µ–º —á—Ç–æ —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫
    else:
        bot.send_message(call.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò•')


#–æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
@bot.message_handler(commands=['history'])
def send_order_history(message):
    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –≤–∏–¥–µ txt —Ñ–∞–π–ª–∞
    with open(r"order_history.txt", 'r') as file:
        if file.read() != '':
            bot.send_document(message.chat.id, open(r"order_history.txt", 'rb'))
        else:
            bot.send_message(message.chat.id, '–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏!')


#–≤–µ–¥–µ–º –∑–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä—ã–µ –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã
@bot.message_handler(content_types=['text'])
def write_to_undefinded(message):
    #–≥–æ–≤–æ—Ä–∏–º —á—Ç–æ –±–æ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª
    bot.reply_to(message, '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–∞–Ω–Ω–∞üòí')
    #–∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
    with open('undefinded_messages.txt', 'a') as file:
        file.write(f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} –Ω–∞–ø–∏—Å–∞–ª {message.text}\n')


bot.polling(none_stop=True)
